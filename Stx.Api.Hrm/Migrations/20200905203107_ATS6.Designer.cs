// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stx.Api.Hrm.Repos;

namespace Stx.Api.Hrm.Migrations
{
    [DbContext(typeof(StxDbContext))]
    [Migration("20200905203107_ATS6")]
    partial class ATS6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stx.Shared.Bps.Contact", b =>
                {
                    b.Property<short>("CompanyID")
                        .HasColumnType("smallint");

                    b.Property<int>("DocNum")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<byte>("DocStatus")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("DynmBillableAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<decimal?>("DynmCurrBalance")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<decimal?>("DynmDueBalance")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<decimal?>("DynmPaidAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LowyerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Privacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID", "DocNum");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Stx.Shared.IPJobCategory", b =>
                {
                    b.Property<short>("JobCatgID")
                        .HasColumnType("smallint");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("JobCatgDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StatusColor")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("JobCatgID");

                    b.ToTable("IPJobCategory");
                });

            modelBuilder.Entity("Stx.Shared.IPJobState", b =>
                {
                    b.Property<short>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ref1Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Ref2Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Ref3Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StatusColor")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusID");

                    b.ToTable("IPJobStatus");
                });

            modelBuilder.Entity("Stx.Shared.Ips.Job", b =>
                {
                    b.Property<int>("DocNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BPAddrs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFiling")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatePriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime2");

                    b.Property<short>("DocStatus")
                        .HasColumnType("smallint");

                    b.Property<int>("FileNum")
                        .HasColumnType("int");

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ImportedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobApplcNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("JobCategory")
                        .HasColumnType("smallint");

                    b.Property<string>("JobRef1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobRef2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobRef3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JobSrcDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobSrcEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("MatterType")
                        .HasColumnType("smallint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("PageUid")
                        .HasColumnType("smallint");

                    b.Property<string>("PctNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocNum");

                    b.ToTable("IPJob");
                });

            modelBuilder.Entity("Stx.Shared.Ips.Trademark", b =>
                {
                    b.Property<int>("DocNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BPAddrs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimingColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFiling")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePriority")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileNum")
                        .HasColumnType("int");

                    b.Property<string>("GoodsNServcs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ImportedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InvAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JobSrcDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobSrcEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("MatterType")
                        .HasColumnType("smallint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("PageUid")
                        .HasColumnType("smallint");

                    b.Property<string>("PriorityDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimilarSounds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMLogoFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMLogoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMRef1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMRef2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMRef3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TMStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("TMTranslation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocNum");

                    b.ToTable("Trademark");
                });

            modelBuilder.Entity("Stx.Shared.Matter", b =>
                {
                    b.Property<short>("CompanyID")
                        .HasColumnType("smallint");

                    b.Property<int>("DocNum")
                        .HasColumnType("int");

                    b.Property<string>("AssignedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ContngncyRatePct")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("CreatedByModule")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateDue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateFiled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateReceived")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("DocStatus")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("DynmBillableAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<decimal>("DynmPaidAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("EstimatedEffort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterFileNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterHandler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterHandlerLead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("MatterPriority")
                        .HasColumnType("tinyint");

                    b.Property<string>("MatterStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatterType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MatterValue")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short>("ModuleID")
                        .HasColumnType("smallint");

                    b.Property<string>("OriginatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Privacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("RateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID", "DocNum");

                    b.ToTable("Matter");
                });

            modelBuilder.Entity("Stx.Shared.MatterType", b =>
                {
                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<short>("MatterTypeID")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("MatterTypeDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ModuleID", "MatterTypeID");

                    b.ToTable("MatterType");
                });

            modelBuilder.Entity("Stx.Shared.Models.CRM.Corporate", b =>
                {
                    b.Property<int>("CorporateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CommercialRegInfo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CommercialRegNum")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CompanyLawyers")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CorporateGroup")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("CorporateType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<short?>("CountryID")
                        .HasColumnType("smallint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LegalType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short?>("Nationality")
                        .HasColumnType("smallint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Privacy")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RefObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference1")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Reference2")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Reference3")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("CorporateID");

                    b.ToTable("Corporate");
                });

            modelBuilder.Entity("Stx.Shared.Models.City", b =>
                {
                    b.Property<string>("CityCD")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<short>("CountryID")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CityCD");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Stx.Shared.Models.Country", b =>
                {
                    b.Property<short>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCD")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CurrCD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CountryID");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Stx.Shared.Models.Currency", b =>
                {
                    b.Property<string>("CurrCD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrSymbolFrgn")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<short?>("Decimals")
                        .HasColumnType("smallint");

                    b.Property<string>("Denomination")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("RoundSys")
                        .HasColumnType("NUMERIC(18,2)");

                    b.Property<byte[]>("Tstamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("CurrCD");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrAtsDepartment", b =>
                {
                    b.Property<short>("ID")
                        .HasColumnType("smallint");

                    b.Property<int>("CorporateID")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RecID")
                        .HasColumnType("int");

                    b.HasKey("ID", "CorporateID");

                    b.ToTable("HrAtsDepartment");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidate", b =>
                {
                    b.Property<int>("CandidateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("CandidateSource")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrCompanyName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CurrCompanyURL")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("CurrOccupation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAvailable")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastComment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNextCall")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("Disability")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("EmploymentPreference")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ExpectedSalary")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<decimal?>("ExpectedSalaryLow")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("ExperienceLevel")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Fax2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("HighestEduLevel")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExempt")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMassMailOptOut")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMessengerOptIn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSmsOptIn")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsWhatsappOptIn")
                        .HasColumnType("bit");

                    b.Property<short?>("JobIndustry")
                        .HasColumnType("smallint");

                    b.Property<string>("JobSearchingMode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LinkedClientContact")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NamePrefix")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("NameSuffix")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<short?>("Nationality")
                        .HasColumnType("smallint");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OnboardingStatus")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Placements")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PreferredContactModes")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PreferredLocations")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrimarySkills")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SecondaryAddress")
                        .HasColumnType("nvarchar(800)")
                        .HasMaxLength(800);

                    b.Property<string>("SecondarySkills")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SkillSetDesc")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("Specialties")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("TimeZoneOffsetEST")
                        .HasColumnType("int");

                    b.Property<int?>("TotalExperience")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WorkPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CandidateID");

                    b.ToTable("HrCandidate");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateCertificate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CertificateName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCertified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("FileAttachments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsPending")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IssuerCountry")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LicenseType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Results")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID", "CandidateID");

                    b.HasIndex("CandidateID");

                    b.ToTable("HrCandidateCertificate");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateEducation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<short?>("City")
                        .HasColumnType("smallint");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<short?>("Country")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateGraduated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Gpa")
                        .HasColumnType("float");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Institute")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InstituteUnit")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Major")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("QualificationName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("QualificationType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("ID", "CandidateID");

                    b.HasIndex("CandidateID");

                    b.ToTable("HrCandidateEducation");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateExperience", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<decimal?>("Commission")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CorporateID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<bool>("IsCurrentJob")
                        .HasColumnType("bit");

                    b.Property<int?>("JobOrderID")
                        .HasColumnType("int");

                    b.Property<int?>("PlacementID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("SalaryCycle")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("TerminationReason")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID", "CandidateID");

                    b.HasIndex("CandidateID");

                    b.ToTable("HrCandidateExperience");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrEmployee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("CountryID")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("JobCategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Smoker")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("HrEmployee");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrJobCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobIndustryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("ID");

                    b.ToTable("HrJobCategory");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrJobOrder", b =>
                {
                    b.Property<int>("JobOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ApplyByEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ApplyByMobileNum")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("AssignedUsers")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Benefits")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("BillingProfile")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("BillingRate")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CorporateAddress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CorporateContact")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("CorporateID")
                        .HasColumnType("int");

                    b.Property<string>("CorporateOperationHours")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastPublished")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<string>("EmploymentType")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("ExternalID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FileAttachments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInterviewRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsJobcastPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSalary")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("JobHoursPerWeek")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("JobIndustry")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("JobOrderIntegrations")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("JobPostPrivacy")
                        .HasColumnType("int");

                    b.Property<string>("JobPostSource")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("JobSpecialty")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("NUMERIC(9,6)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("NUMERIC(9,6)");

                    b.Property<short?>("MinEducationLevel")
                        .HasColumnType("smallint");

                    b.Property<short?>("MinExperienceLevel")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("MinYearsExpRequired")
                        .HasColumnType("NUMERIC(6,2)");

                    b.Property<int>("NumOfAvilJobs")
                        .HasColumnType("int");

                    b.Property<string>("PostingJobBy")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("ReasonClosed")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReportToClientContact")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ReportToName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<decimal?>("Salary")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("SalaryCurrCD")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<decimal?>("SalaryTo")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<string>("SalaryUnit")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TravelRequirements")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("JobOrderID");

                    b.ToTable("HrJobOrder");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrJobSendout", b =>
                {
                    b.Property<int>("CandidateID")
                        .HasColumnType("int");

                    b.Property<int>("JobOrderID")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("CorporateContact")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CorporateEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("CorporateID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("CandidateID", "JobOrderID");

                    b.ToTable("HrJobSendout");
                });

            modelBuilder.Entity("Stx.Shared.Models.Lang", b =>
                {
                    b.Property<short>("LangID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("HasWrittenLang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("LangID");

                    b.ToTable("Lang");
                });

            modelBuilder.Entity("Stx.Shared.Models.Nationality", b =>
                {
                    b.Property<short>("NationalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<short?>("CountryID")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("NationalityID");

                    b.ToTable("Nationality");
                });

            modelBuilder.Entity("Stx.Shared.Models.State", b =>
                {
                    b.Property<short>("StateID")
                        .HasColumnType("smallint");

                    b.Property<short>("CountryID")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StateID", "CountryID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Stx.Shared.NiceClass", b =>
                {
                    b.Property<short>("ClassID")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ClassDesc")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("ClassEdition")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short?>("ClassSubID")
                        .HasColumnType("smallint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CreatedByScreen")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ImportedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ClassID");

                    b.ToTable("NiceClass");
                });

            modelBuilder.Entity("Stx.Shared.Reports.IPReportQryJob", b =>
                {
                    b.Property<string>("ApplcNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPAddrs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFiling")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatePriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocNum")
                        .HasColumnType("int");

                    b.Property<string>("DocStatusColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocStatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileNum")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JobSrcDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobSrcEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("MatterType")
                        .HasColumnType("smallint");

                    b.Property<string>("MatterTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PctNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("RecStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Ref1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref1Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref2Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref3Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("QryIPReportJobs");
                });

            modelBuilder.Entity("Stx.Shared.Reports.IPReportQryTM", b =>
                {
                    b.Property<string>("ApplcNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPAddrs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BPPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimingColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFiling")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePriority")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReg")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocNum")
                        .HasColumnType("int");

                    b.Property<string>("DocStatusColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocStatusDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileNum")
                        .HasColumnType("int");

                    b.Property<string>("GoodsNServcs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("InvAmt")
                        .HasColumnType("NUMERIC(19,2)");

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JobSrcDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobSrcEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSrcSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("MatterType")
                        .HasColumnType("smallint");

                    b.Property<string>("MatterTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PctNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("RecStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Ref1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref1Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref2Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ref3Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SimilarSounds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMLogoFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMLogoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMTranslation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TMWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminalID")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("QryIPReportTMs");
                });

            modelBuilder.Entity("Stx.Shared.TMState", b =>
                {
                    b.Property<short>("StatusID")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ref1Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Ref2Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Ref3Title")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("StatusColor")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("StatusID");

                    b.ToTable("TMStatus");
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateCertificate", b =>
                {
                    b.HasOne("Stx.Shared.Models.HRM.HrCandidate", null)
                        .WithMany("Certificates")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateEducation", b =>
                {
                    b.HasOne("Stx.Shared.Models.HRM.HrCandidate", null)
                        .WithMany("Educations")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stx.Shared.Models.HRM.HrCandidateExperience", b =>
                {
                    b.HasOne("Stx.Shared.Models.HRM.HrCandidate", null)
                        .WithMany("Experiences")
                        .HasForeignKey("CandidateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
